%% VQLBG 使用Linde-Buzo-Gray算法进行矢量量化
% 算法步骤：
% 1. 给定训练集，设置失真阈值为一个很小的整数
% 2. 将初始码矢设置为所有训练样本的平均值，设置总失真度
% 3. 码矢分裂
% 4. 迭代：
%   （1）对于训练集中每个样本，找到距离最近的码矢，划分到相应区域
%   （2）根据区域内的样本，更新码矢
%   （3）计算失真度，小于阈值跳出迭代，否则继续
% 5. 重复步骤3和4直到码矢数目达到要求


% 输入：
%    d    训练数据，每列一个数据，注意训练数据中提前把零向量去除掉,否则训练出的码矢会出问题
%    k    编码数目，注意需要为2的幂次方
function r = vqlbg(d, k)
    % 初始化
    e = 0.01; % 失真阈值
    r = mean(d, 2); % 所有样本的平均值，作为初始质心
    dpr = 10000; % 初始失真度

    for i = 1:log2(k)
        r = [r * (1 + e) + e, r * (1 - e) - e]; % 码矢分裂
        
        while 1
            % 寻找最近码矢并划分区域
            z = disteu(d, r); % 求训练数据到各个码矢的距离
            [~, ind] = min(z, [], 2); % 求最短距离对应序号
            
            % 更新
            t = 0; % 初始化新失真度
            for j = 1 : 2^i
                if (find(ind == j) ~= 0)
                    r(:, j) = mean(d(:, ind == j),2); % 使用质点范围内的数据更新质点
                    x = disteu(d(:, ind == j), r(:, j)); % 计算新质点的失真度
                else
                    x = 0;
                end
                
                for q = 1 : length(x)
                    t = t + x(q);
                end
            end
            
            if ((dpr - t)/t < e)
                break;
            else
                dpr = t;
            end     
        end
    end
end